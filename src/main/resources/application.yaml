server:
  port: 8080
spring:
  #config env: dev/prod
  profiles:
    active: dev
  main:
    allow-circular-references: true
  application:
    name: AsianCuisine
  datasource:
    driver-class-name: ${ac.spring.datasource.driver-class-name}
    url: ${ac.spring.datasource.url}
    username: ${ac.spring.datasource.username}
    password: ${ac.spring.datasource.password}
  jackson:
    default-property-inclusion: non_null # JSON will ignore null field
  servlet:
    multipart: # for image upload
      max-file-size: 50MB
      max-request-size: 50MB
  redis:
    host: ${ac.spring.redis.host}
    port: ${ac.spring.redis.port}
    password: ${ac.spring.redis.password}
    lettuce:
      pool:
        max-active: 10
        max-idle: 10
        min-idle: 1
        time-between-eviction-runs: 10s
  redisson:
    single-server-config:
      address: redis://${ac.spring.redis.host}:${ac.spring.redis.port}
      database: 0
      password: ${ac.spring.redis.password}
      idle-connection-timeout: 10s
      connect-timeout: 10s
      timeout: 3000
      retry-interval: 1000
      retry-attempts: 3
  rabbitmq:
    addresses: localhost
    port: 5672
    username: admin
    password: admin
    listener:
      simple:
        prefetch: 1 # 每次投递n个消息，消费完在投递n个
    topic:
      post_update: post_update
      



mybatis:
  mapper-locations: classpath:/mapper/*.xml
  type-aliases-package: com.asiancuisine.asiancuisine.entity
  config-location: classpath:/mybatis/mybatis-config.xml
logging:
  level:
    com.asiancuisine.asiancuisine: debug




ssh:
  host: ${ac.ssh.host}
  privateKeyPath: ${ac.ssh.privateKeyPath}
  passphrase: ${ac.ssh.passphrase}

aws:
  s3:
    accessKey: ${ac.aws.s3.accessKey}
    secretKey: ${ac.aws.s3.secretKey}
    region: ${ac.aws.s3.region}
    bucketName: ${ac.aws.s3.bucketName}

jwt:
  user-secret-key: asiancuisine
  # expire time for remembered
  user-ttl-remembered: 604800000
  # expire time for not remembered
  user-ttl-not-remembered: 86400000
  # Set token name from frontend (in http header)
  user-token-name: Authorization
  # reset password secret key
  reset-password-secret-key: resetpassword
  # expire time for resetting the password
  reset-password-ttl: 600000
  # set token name from frontend (in http header)
  reset-password-token-name: Authorization